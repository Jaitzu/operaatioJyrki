{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar invariant_1 = __importDefault(require(\"invariant\"));\n\nfunction validateSourceContract(source) {\n  invariant_1.default(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n  invariant_1.default(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n  invariant_1.default(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\n\nexports.validateSourceContract = validateSourceContract;\n\nfunction validateTargetContract(target) {\n  invariant_1.default(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n  invariant_1.default(typeof target.hover === 'function', 'Expected hover to be a function.');\n  invariant_1.default(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\n\nexports.validateTargetContract = validateTargetContract;\n\nfunction validateType(type, allowArray) {\n  if (allowArray && Array.isArray(type)) {\n    type.forEach(function (t) {\n      return validateType(t, false);\n    });\n    return;\n  }\n\n  invariant_1.default(typeof type === 'string' || typeof type === 'symbol', allowArray ? 'Type can only be a string, a symbol, or an array of either.' : 'Type can only be a string or a symbol.');\n}\n\nexports.validateType = validateType;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/node_modules/dnd-core-cjs/lib/contracts.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","invariant_1","require","validateSourceContract","source","default","canDrag","beginDrag","endDrag","validateTargetContract","target","canDrop","hover","drop","validateType","type","allowArray","Array","isArray","forEach","t"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,WAAW,GAAGP,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAAjC;;AACA,SAASC,sBAAT,CAAgCC,MAAhC,EAAwC;AACpCH,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOD,MAAM,CAACE,OAAd,KAA0B,UAA9C,EAA0D,oCAA1D;AACAL,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOD,MAAM,CAACG,SAAd,KAA4B,UAAhD,EAA4D,sCAA5D;AACAN,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOD,MAAM,CAACI,OAAd,KAA0B,UAA9C,EAA0D,oCAA1D;AACH;;AACDT,OAAO,CAACI,sBAAR,GAAiCA,sBAAjC;;AACA,SAASM,sBAAT,CAAgCC,MAAhC,EAAwC;AACpCT,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOK,MAAM,CAACC,OAAd,KAA0B,UAA9C,EAA0D,oCAA1D;AACAV,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOK,MAAM,CAACE,KAAd,KAAwB,UAA5C,EAAwD,kCAAxD;AACAX,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOK,MAAM,CAACG,IAAd,KAAuB,UAA3C,EAAuD,sCAAvD;AACH;;AACDd,OAAO,CAACU,sBAAR,GAAiCA,sBAAjC;;AACA,SAASK,YAAT,CAAsBC,IAAtB,EAA4BC,UAA5B,EAAwC;AACpC,MAAIA,UAAU,IAAIC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAlB,EAAuC;AACnCA,IAAAA,IAAI,CAACI,OAAL,CAAa,UAAUC,CAAV,EAAa;AAAE,aAAON,YAAY,CAACM,CAAD,EAAI,KAAJ,CAAnB;AAAgC,KAA5D;AACA;AACH;;AACDnB,EAAAA,WAAW,CAACI,OAAZ,CAAoB,OAAOU,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAAhE,EAA0EC,UAAU,GAC9E,6DAD8E,GAE9E,wCAFN;AAGH;;AACDjB,OAAO,CAACe,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = __importDefault(require(\"invariant\"));\nfunction validateSourceContract(source) {\n    invariant_1.default(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n    invariant_1.default(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n    invariant_1.default(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\nexports.validateSourceContract = validateSourceContract;\nfunction validateTargetContract(target) {\n    invariant_1.default(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n    invariant_1.default(typeof target.hover === 'function', 'Expected hover to be a function.');\n    invariant_1.default(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\nexports.validateTargetContract = validateTargetContract;\nfunction validateType(type, allowArray) {\n    if (allowArray && Array.isArray(type)) {\n        type.forEach(function (t) { return validateType(t, false); });\n        return;\n    }\n    invariant_1.default(typeof type === 'string' || typeof type === 'symbol', allowArray\n        ? 'Type can only be a string, a symbol, or an array of either.'\n        : 'Type can only be a string or a symbol.');\n}\nexports.validateType = validateType;\n"]},"metadata":{},"sourceType":"script"}