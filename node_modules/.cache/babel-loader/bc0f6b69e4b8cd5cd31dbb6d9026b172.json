{"ast":null,"code":"import _initializerDefineProperty from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { action, observable } from 'mobx';\nlet PrintOutStore = (_class = (_temp = class PrintOutStore {\n  //reprint reprint types\n  //printout types\n  //printout announcement receivers\n  //reprint product types\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"reprint\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"printout\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"announcementReceivers\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"productTypes\", _descriptor4, this);\n\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"checkSessionStore\", _descriptor5, this);\n\n    this.rootStore = rootStore;\n  } //function for checking the sessionStore\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"reprint\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      printout: \"Account statement\",\n      type: \"ACCOUNTSTATEMENT\"\n    }, {\n      printout: \"Application for death claim compensation\",\n      type: \"DEATH_CLAIM_COMPENSATION\"\n    }, {\n      printout: \"Benefit\",\n      type: \"BENEFIT\"\n    }, {\n      printout: \"Blank invoice\",\n      type: \"BLANCOINVOICE\"\n    }, {\n      printout: \"Certificate of investment plan change\",\n      type: \"INVPLAN_CHANGE_CERTIFICATE\"\n    }, {\n      printout: \"Certificate of premiums\",\n      type: \"NOTICEOFPREMIUMS\"\n    }, {\n      printout: \"Certificate of savings reallocation\",\n      type: \"SAVINGSREALLOCATION\"\n    }, {\n      printout: \"Certificate of savings reallocation, rate correction\",\n      type: \"SAVINGSREALLOCATION_RATE_CORRECTION\"\n    }, {\n      printout: \"Direct debiting notification\",\n      type: \"DDEBITCERTIFICATE\"\n    }, {\n      printout: \"Direct debiting warrant\",\n      type: \"DDEBIT\"\n    }, {\n      printout: \"Direct payment notification\",\n      type: \"DPAYMENTCERTIFICATE\"\n    }, {\n      printout: \"Group policy invoice\",\n      type: \"GROUPINVOICE\"\n    }, {\n      printout: \"Group policy yearly printout\",\n      type: \"GROUPPOLICY\"\n    }, {\n      printout: \"Inform of maturity\",\n      type: \"MATURITY_LETTER\"\n    }, {\n      printout: \"Insurance certificate\",\n      type: \"INSURANCE_CERTIFICATE\"\n    }, {\n      printout: \"Insurance terms\",\n      type: \"PROD_INSURANCE_TERMS\"\n    }, {\n      printout: \"Invoice\",\n      type: \"INVOICE\"\n    }, {\n      printout: \"Invoicing list\",\n      type: \"INVOICING_LIST\"\n    }, {\n      printout: \"Letter for distraint officer or pledgee\",\n      type: \"DISTRAINT_OFFICER_LETTER\"\n    }, {\n      printout: \"Letter for register office\",\n      type: \"REGISTER_OFFICE_LETTER\"\n    }, {\n      printout: \"Letter of cancelling policy\",\n      type: \"CANCELLING_POLICY_LETTER\"\n    }, {\n      printout: \"Letter of death claim compensation\",\n      type: \"DEATH_CLAIM_COMPENSATION_LETTER\"\n    }, {\n      printout: \"Letter of death claim decision\",\n      type: \"DEATH_CLAIM_DECISION_LETTER\"\n    }, {\n      printout: \"Letter of maturity decision\",\n      type: \"MATURITY_DECISION\"\n    }, {\n      printout: \"Letter of pension change\",\n      type: \"PENSION_CHANGE_CLAIM\"\n    }, {\n      printout: \"Letter of pension ending\",\n      type: \"PENSION_ENDING\"\n    }, {\n      printout: \"Letter of savings transfer decision\",\n      type: \"SAVINGS_TRANSFER_DECISION\"\n    }, {\n      printout: \"Letter of surrender decision\",\n      type: \"SURRENDER_DECISION_LETTER\"\n    }, {\n      printout: \"Notice of lapse\",\n      type: \"NOTICEOFLAPSE\"\n    }, {\n      printout: \"Notice of pledge\",\n      type: \"NOTICEOFPLEDGE\"\n    }, {\n      printout: \"Notification for death estate\",\n      type: \"DEATH_ESTATE_NOTIFICATION\"\n    }, {\n      printout: \"Pension decision letter\",\n      type: \"PENSIONDECISION\"\n    }, {\n      printout: \"Pension inform letter\",\n      type: \"PENSION_LETTER\"\n    }, {\n      printout: \"Pension starting notification\",\n      type: \"PENSION_STARTING\"\n    }, {\n      printout: \"Policy\",\n      type: \"POLICY\"\n    }, {\n      printout: \"Price list\",\n      type: \"PROD_PRICE_LIST\"\n    }, {\n      printout: \"Product description\",\n      type: \"PROD_PRODUCT_DESCRIPTION\"\n    }, {\n      printout: \"Reminder invoice\",\n      type: \"RISK_REMINDER_INVOICE\"\n    }, {\n      printout: \"Reminder of maturity\",\n      type: \"MATURITY_REMINDER\"\n    }, {\n      printout: \"Risk policy ending\",\n      type: \"RISK_POLICY_ENDING\"\n    }, {\n      printout: \"Savings transfer request\",\n      type: \"SAVINGS_TRANSFER_REQUEST\"\n    }];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"printout\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      printout: \"Account Statement\",\n      type: \"ACCOUNTSTATEMENT\"\n    }, {\n      printout: \"Blank invoice\",\n      type: \"BLANCOINVOICE\"\n    }, {\n      printout: \"Certificate of premiums\",\n      type: \"NOTICEOFPREMIUMS\"\n    }, {\n      printout: \"Insurance certificate\",\n      type: \"INSURANCE_CERTIFICATE\"\n    }, {\n      printout: \"Pension inform letter\",\n      type: \"PENSION_LETTER\"\n    }, {\n      printout: \"Announcement\",\n      type: \"ANNOUNCEMENT\"\n    }];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"announcementReceivers\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [\" \", \"POLICYHOLDER\", \"INSURED\", \"PAYER\"];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"productTypes\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [{\n      product: \"Any\",\n      type: \"ANY\"\n    }, {\n      product: \"Pension\",\n      type: \"PENSION\"\n    }, {\n      product: \"Group pension\",\n      type: \"GROUP_PENSION\"\n    }, {\n      product: \"Group policy\",\n      type: \"GROUP_POLICY\"\n    }, {\n      product: \"Savings\",\n      type: \"SAVINGS\"\n    }, {\n      product: \"Personal risk\",\n      type: \"PERSONAL_RISK\"\n    }, {\n      product: \"Personal capitalization\",\n      type: \"PERSONAL_CAPITALIZATION\"\n    }];\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"checkSessionStore\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      if (sessionStorage.length !== 0) {}\n    };\n  }\n})), _class);\nexport { PrintOutStore as default };","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/stores/PrintOutStore.ts"],"names":["action","observable","PrintOutStore","constructor","rootStore","printout","type","product","sessionStorage","length"],"mappings":"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","sourcesContent":["import {action, observable} from 'mobx';\nimport {fetchFromApi, postToApi} from './ApiServices';\nimport {getCookie} from './CookieServices';\nimport ClientStore from './ClientStore';\nimport {Input} from \"reactstrap\";\nimport React from \"react\";\n\n\n\nexport default class PrintOutStore {\n    //reprint reprint types\n    @observable public reprint:any[]=[\n        {printout:\"Account statement\", type:\"ACCOUNTSTATEMENT\"},\n        {printout:\"Application for death claim compensation\", type:\"DEATH_CLAIM_COMPENSATION\"},\n        {printout:\"Benefit\", type:\"BENEFIT\"},\n        {printout:\"Blank invoice\", type:\"BLANCOINVOICE\"},\n        {printout:\"Certificate of investment plan change\", type:\"INVPLAN_CHANGE_CERTIFICATE\"},\n        {printout:\"Certificate of premiums\", type:\"NOTICEOFPREMIUMS\"},\n        {printout:\"Certificate of savings reallocation\", type:\"SAVINGSREALLOCATION\"},\n        {printout:\"Certificate of savings reallocation, rate correction\", type:\"SAVINGSREALLOCATION_RATE_CORRECTION\"},\n        {printout:\"Direct debiting notification\", type:\"DDEBITCERTIFICATE\"},\n        {printout:\"Direct debiting warrant\", type:\"DDEBIT\"},\n        {printout:\"Direct payment notification\", type:\"DPAYMENTCERTIFICATE\"},\n        {printout:\"Group policy invoice\", type:\"GROUPINVOICE\"},\n        {printout:\"Group policy yearly printout\", type:\"GROUPPOLICY\"},\n        {printout:\"Inform of maturity\", type:\"MATURITY_LETTER\"},\n        {printout:\"Insurance certificate\", type:\"INSURANCE_CERTIFICATE\"},\n        {printout:\"Insurance terms\", type:\"PROD_INSURANCE_TERMS\"},\n        {printout:\"Invoice\", type:\"INVOICE\"},\n        {printout:\"Invoicing list\", type:\"INVOICING_LIST\"},\n        {printout:\"Letter for distraint officer or pledgee\", type:\"DISTRAINT_OFFICER_LETTER\"},\n        {printout:\"Letter for register office\", type:\"REGISTER_OFFICE_LETTER\"},\n        {printout:\"Letter of cancelling policy\", type:\"CANCELLING_POLICY_LETTER\"},\n        {printout:\"Letter of death claim compensation\", type:\"DEATH_CLAIM_COMPENSATION_LETTER\"},\n        {printout:\"Letter of death claim decision\", type:\"DEATH_CLAIM_DECISION_LETTER\"},\n        {printout:\"Letter of maturity decision\", type:\"MATURITY_DECISION\"},\n        {printout:\"Letter of pension change\", type:\"PENSION_CHANGE_CLAIM\"},\n        {printout:\"Letter of pension ending\", type:\"PENSION_ENDING\"},\n        {printout:\"Letter of savings transfer decision\", type:\"SAVINGS_TRANSFER_DECISION\"},\n        {printout:\"Letter of surrender decision\", type:\"SURRENDER_DECISION_LETTER\"},\n        {printout:\"Notice of lapse\", type:\"NOTICEOFLAPSE\"},\n        {printout:\"Notice of pledge\", type:\"NOTICEOFPLEDGE\"},\n        {printout:\"Notification for death estate\", type:\"DEATH_ESTATE_NOTIFICATION\"},\n        {printout:\"Pension decision letter\", type:\"PENSIONDECISION\"},\n        {printout:\"Pension inform letter\", type:\"PENSION_LETTER\"},\n        {printout:\"Pension starting notification\", type:\"PENSION_STARTING\"},\n        {printout:\"Policy\", type:\"POLICY\"},\n        {printout:\"Price list\", type:\"PROD_PRICE_LIST\"},\n        {printout:\"Product description\", type:\"PROD_PRODUCT_DESCRIPTION\"},\n        {printout:\"Reminder invoice\", type:\"RISK_REMINDER_INVOICE\"},\n        {printout:\"Reminder of maturity\", type:\"MATURITY_REMINDER\"},\n        {printout:\"Risk policy ending\", type:\"RISK_POLICY_ENDING\"},\n        {printout:\"Savings transfer request\", type:\"SAVINGS_TRANSFER_REQUEST\"}\n    ]\n    //printout types\n    @observable public printout:any[]=[\n        {printout:\"Account Statement\", type:\"ACCOUNTSTATEMENT\"},\n        {printout:\"Blank invoice\", type:\"BLANCOINVOICE\"},\n        {printout:\"Certificate of premiums\", type:\"NOTICEOFPREMIUMS\"},\n        {printout:\"Insurance certificate\", type:\"INSURANCE_CERTIFICATE\"},\n        {printout:\"Pension inform letter\", type:\"PENSION_LETTER\"},\n        {printout:\"Announcement\", type:\"ANNOUNCEMENT\"}\n    ]\n    //printout announcement receivers\n    @observable public announcementReceivers:string[]=[\n        \" \",\"POLICYHOLDER\",\"INSURED\",\"PAYER\"\n    ]\n    //reprint product types\n    @observable public productTypes:any[]=[\n        {product:\"Any\", type:\"ANY\"},\n        {product:\"Pension\", type:\"PENSION\"},\n        {product:\"Group pension\", type:\"GROUP_PENSION\"},\n        {product:\"Group policy\", type:\"GROUP_POLICY\"},\n        {product:\"Savings\", type:\"SAVINGS\"},\n        {product:\"Personal risk\",type:\"PERSONAL_RISK\"},\n        {product:\"Personal capitalization\", type:\"PERSONAL_CAPITALIZATION\"}\n    ]\n    private rootStore: any;\n\n    constructor(rootStore: any) {\n        this.rootStore = rootStore;\n    }\n\n    //function for checking the sessionStore\n    @action\n    public checkSessionStore= () =>{\n        if(sessionStorage.length !==0) {\n\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}