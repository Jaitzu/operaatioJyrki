{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar invariant_1 = __importDefault(require(\"invariant\"));\n\nvar js_utils_1 = require(\"../utils/js_utils\");\n\nvar utils_1 = require(\"./utils\");\n\nvar decorateHandler_1 = __importDefault(require(\"./decorateHandler\"));\n\nvar registration_1 = require(\"../common/registration\");\n\nvar DragSourceMonitorImpl_1 = require(\"../common/DragSourceMonitorImpl\");\n\nvar SourceConnector_1 = require(\"../common/SourceConnector\");\n\nvar isValidType_1 = require(\"../utils/isValidType\");\n\nvar createSourceFactory_1 = __importDefault(require(\"./createSourceFactory\"));\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\n\n\nfunction DragSource(type, spec, collect, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  utils_1.checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant_1.default(isValidType_1.isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' + 'a string, or a function that returns a string given the current props. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n\n    getType = function () {\n      return type;\n    };\n  }\n\n  invariant_1.default(js_utils_1.isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n  var createSource = createSourceFactory_1.default(spec);\n  invariant_1.default(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  invariant_1.default(js_utils_1.isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  return function decorateSource(DecoratedComponent) {\n    return decorateHandler_1.default({\n      containerDisplayName: 'DragSource',\n      createHandler: createSource,\n      registerHandler: registration_1.registerSource,\n      createConnector: function (backend) {\n        return new SourceConnector_1.SourceConnector(backend);\n      },\n      createMonitor: function (manager) {\n        return new DragSourceMonitorImpl_1.DragSourceMonitorImpl(manager);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}\n\nexports.DragSource = DragSource;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/node_modules/react-dnd-cjs/lib/decorators/DragSource.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","invariant_1","require","js_utils_1","utils_1","decorateHandler_1","registration_1","DragSourceMonitorImpl_1","SourceConnector_1","isValidType_1","createSourceFactory_1","DragSource","type","spec","collect","options","checkDecoratorArguments","getType","default","isValidType","isPlainObject","createSource","decorateSource","DecoratedComponent","containerDisplayName","createHandler","registerHandler","registerSource","createConnector","backend","SourceConnector","createMonitor","manager","DragSourceMonitorImpl"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar js_utils_1 = require(\"../utils/js_utils\");\nvar utils_1 = require(\"./utils\");\nvar decorateHandler_1 = __importDefault(require(\"./decorateHandler\"));\nvar registration_1 = require(\"../common/registration\");\nvar DragSourceMonitorImpl_1 = require(\"../common/DragSourceMonitorImpl\");\nvar SourceConnector_1 = require(\"../common/SourceConnector\");\nvar isValidType_1 = require(\"../utils/isValidType\");\nvar createSourceFactory_1 = __importDefault(require(\"./createSourceFactory\"));\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\nfunction DragSource(type, spec, collect, options) {\n    if (options === void 0) { options = {}; }\n    utils_1.checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n    var getType = type;\n    if (typeof type !== 'function') {\n        invariant_1.default(isValidType_1.isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' +\n            'a string, or a function that returns a string given the current props. ' +\n            'Instead, received %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n        getType = function () { return type; };\n    }\n    invariant_1.default(js_utils_1.isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' +\n        'a plain object. Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n    var createSource = createSourceFactory_1.default(spec);\n    invariant_1.default(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' +\n        'a function that returns a plain object of props to inject. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n    invariant_1.default(js_utils_1.isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' +\n        'a plain object when specified. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n    return function decorateSource(DecoratedComponent) {\n        return decorateHandler_1.default({\n            containerDisplayName: 'DragSource',\n            createHandler: createSource,\n            registerHandler: registration_1.registerSource,\n            createConnector: function (backend) { return new SourceConnector_1.SourceConnector(backend); },\n            createMonitor: function (manager) {\n                return new DragSourceMonitorImpl_1.DragSourceMonitorImpl(manager);\n            },\n            DecoratedComponent: DecoratedComponent,\n            getType: getType,\n            collect: collect,\n            options: options,\n        });\n    };\n}\nexports.DragSource = DragSource;\n"]},"metadata":{},"sourceType":"script"}