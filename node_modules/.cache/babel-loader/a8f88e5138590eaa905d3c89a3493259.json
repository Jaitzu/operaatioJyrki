{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"/home/janne/repot/OperaatioJyrki/src/App.tsx\";\n\nimport React from 'react';\nimport './App.scss';\nimport ViewContainer from './components/ViewContainer';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport Header from \"./components/Header\";\nimport ErrorModal from \"./components/ErrorModal\";\nimport ConfirmationModal from \"./components/ConfirmationModal\";\nlet App = (_dec = inject('operationStore'), _dec(_class = observer(_class = class App extends React.Component {\n  //function for checking if there is any data in sessionStorage after page reload\n  componentDidMount() {\n    this.props.operationStore.checkSessionStore();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Router, {\n      basename: \"/plp-mass/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(ErrorModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(ConfirmationModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(ViewContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))));\n  }\n\n}) || _class) || _class);\nexport default App;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/App.tsx"],"names":["React","ViewContainer","BrowserRouter","Router","inject","observer","Header","ErrorModal","ConfirmationModal","App","Component","componentDidMount","props","operationStore","checkSessionStore","render"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAAQC,MAAR,EAAeC,QAAf,QAA8B,YAA9B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;IAOMC,G,WAFLL,MAAM,CAAC,gBAAD,C,gBACNC,Q,UADD,MAEMI,GAFN,SAEkBT,KAAK,CAACU,SAFxB,CAEmD;AAE/C;AACAC,EAAAA,iBAAiB,GAAS;AACtB,SAAKC,KAAL,CAAWC,cAAX,CAA2BC,iBAA3B;AACH;;AACMC,EAAAA,MAAP,GAAgB;AACZ,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,CADJ;AAYH;;AAnB8C,C;AAsBnD,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport ViewContainer from './components/ViewContainer';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {inject,observer} from \"mobx-react\";\nimport {IOperationStore} from \"./stores/types\";\nimport Header from \"./components/Header\";\nimport ErrorModal from \"./components/ErrorModal\"\nimport ConfirmationModal from \"./components/ConfirmationModal\"\ninterface IOperationProps {\n    operationStore?:IOperationStore\n\n}\n@inject('operationStore')\n@observer\nclass App extends React.Component<IOperationProps> {\n\n    //function for checking if there is any data in sessionStorage after page reload\n    componentDidMount(): void {\n        this.props.operationStore!.checkSessionStore()\n    }\n    public render() {\n        return (\n            <div className=\"App\">\n                <Router basename=\"/plp-mass/\">\n                    <div className=\"main\">\n                        <ErrorModal/>\n                        <ConfirmationModal/>\n                        <Header/>\n                        <ViewContainer/>\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}