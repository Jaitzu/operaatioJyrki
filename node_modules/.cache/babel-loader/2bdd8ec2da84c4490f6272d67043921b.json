{"ast":null,"code":"var _jsxFileName = \"/home/janne/repot/OperaatioJyrki/src/components/YearlySafetyAmountList/YearlyList.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./YearlyList.scss\";\nimport { Button, Input, Table } from \"reactstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst YearlyList = inject('operationStore', 'printOutStore')(observer(props => {\n  const [dropdownOpen, setOpen] = useState(false);\n  const [dropdownIndex, setIndex] = useState();\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const [pendingReceiver, setPendingReceiver] = useState(\"\");\n  const [draggedItem, setDraggedItem] = useState({});\n\n  const addNewTableColumn = () => {\n    console.log(props.orders);\n    props.updateOrders({\n      order: props.orders.length + 1,\n      receiver: \"\"\n    }, \"newColumn\");\n  };\n\n  useEffect(() => {\n    table();\n    console.log(dropdownOpen);\n  });\n\n  const päivitäEläke = evt => {\n    evt.preventDefault();\n    setPendingReceiver(evt.target.value);\n  };\n\n  const table = () => {\n    console.log(props.orders);\n    const variables = props.orders;\n\n    if (props.orders !== undefined) {\n      return variables;\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"announcement-receivers-table-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: \"announcement-receivers-table-view__table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"announcement-receivers-table-view__table-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"El\\xE4ke vuosi\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"El\\xE4kkeen m\\xE4\\xE4r\\xE4\"))), React.createElement(\"tbody\", {\n    className: \"announcement-receivers-table-view__table-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, table() !== null && table().map((target, index) => React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, ika(index)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"receiverInput\",\n    onChange: evt => {\n      päivitäEläke(evt);\n    },\n    className: \"announcement-receivers-table-view__table-body-input\",\n    type: \"select\",\n    name: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))))), React.createElement(Button, {\n    id: \"addNewReceiverTableColumn\",\n    onClick: () => addNewTableColumn(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"add\"));\n}));\nexport default YearlyList;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/components/YearlySafetyAmountList/YearlyList.tsx"],"names":["React","useState","useEffect","Button","Input","Table","inject","observer","YearlyList","props","dropdownOpen","setOpen","dropdownIndex","setIndex","toggle","pendingReceiver","setPendingReceiver","draggedItem","setDraggedItem","addNewTableColumn","console","log","orders","updateOrders","order","length","receiver","table","päivitäEläke","evt","preventDefault","target","value","variables","undefined","map","index","ika"],"mappings":"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","sourcesContent":["import React, {useState, useRef, createRef, useEffect} from \"react\"\nimport \"./YearlyList.scss\"\nimport {\n    Button,\n    Input,\n    Row,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Table,\n    ButtonDropdown\n} from \"reactstrap\";\nimport {inject, observer} from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nconst YearlyList = inject('operationStore', 'printOutStore')(observer((props:any) => {\n\n    const [dropdownOpen, setOpen] = useState(false);\n    const [dropdownIndex, setIndex] = useState();\n    const toggle = () => setOpen(!dropdownOpen);\n    const [pendingReceiver, setPendingReceiver]=useState(\"\");\n    const [draggedItem, setDraggedItem] = useState({})\n\n    const addNewTableColumn = () => {\n        console.log(props.orders)\n        props.updateOrders({order: props.orders.length + 1, receiver: \"\"},\"newColumn\")\n\n    }\n    useEffect(()=>{\n        table()\nconsole.log(dropdownOpen)\n    },)\n    const päivitäEläke =(evt:any)=>{\n\n        evt.preventDefault();\n        setPendingReceiver(evt.target.value)\n    }\n\n    const table =()=> {\n        console.log(props.orders)\n        const variables = props.orders\n        if(props.orders!== undefined) {\n            return variables\n        }else{\n            return null\n        }\n    }\n\n    return (\n        <div className=\"announcement-receivers-table-view\">\n\n            <Table className=\"announcement-receivers-table-view__table\">\n                <thead className={\"announcement-receivers-table-view__table-header\"}>\n                <tr>\n                    <th>Eläke vuosi</th>\n                    <th>Eläkkeen määrä</th>\n                </tr>\n                </thead>\n                <tbody className={\"announcement-receivers-table-view__table-body\"}>\n                {(table()!== null)\n                    &&\n                    table().map((target: any, index: number) => (\n                    <tr key={index} >\n                        <td>{ika(index)}</td>\n                        <td><Input id={\"receiverInput\"} onChange={(evt)=>{päivitäEläke(evt)}} className={\"announcement-receivers-table-view__table-body-input\"} type=\"select\" name=\"select\"/></td>\n                    </tr>\n\n                ))}\n                </tbody>\n            </Table>\n            <Button id={\"addNewReceiverTableColumn\"} onClick={() => addNewTableColumn()}>add</Button>\n        </div>\n    )\n}))\n\n\nexport default YearlyList;"]},"metadata":{},"sourceType":"module"}