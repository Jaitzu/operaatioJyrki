{"ast":null,"code":"import _initializerDefineProperty from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _temp;\n\nimport { action, observable } from 'mobx';\nimport { toJS } from \"mobx\";\nlet OperationStore = (_class = (_temp = class OperationStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"LopetusIk\\xE4\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"aloitusIk\\xE4\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"public\", _descriptor3, this);\n\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"checkSessionStore\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"handleConfirmation\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"handleConfirmationModal\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"setStatus\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"setDefineAction\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"setMassOperation\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"setTargetPolicies\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"cancel\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"newOrder\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"setDefineAnnouncement\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"setDefineReprint\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"setForcedCalculation\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"newPrintOutOrder\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"newReprintOrder\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"newForcedCalculation\", _descriptor18, this);\n\n    this.rootStore = rootStore;\n  } //function for checking the sessionStore for data and updating the observable variables\n\n\n  //function for making a printout order api call\n  postNewPrintOutOrder(token) {\n    const url = \"/plp-core-services/rest/massoperations/printoutorder\";\n    const body = {\n      \"printoutType\": this.printOutType,\n      \"printExecDate\": this.printExecDate,\n      \"agreementID\": this.agreementID,\n      \"groupID\": this.groupID,\n      \"startDate\": this.startDate,\n      \"endDate\": this.endDate\n    };\n    const settings = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json',\n        'x-csrf-token': token,\n        'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n        'plp-user': \"boadmin\",\n        'plp-end-user': \"boadmin\"\n      },\n      body: JSON.stringify(body)\n    };\n    return postToApi(url, settings).then(action(res => {\n      console.log(res);\n      return res;\n    })).catch(res => {\n      this.rootStore.errorStore.showError(res.message, res.title);\n      return res;\n    });\n  } //function for making a reprint order api call\n\n\n  postNewReprintOrder(token) {\n    console.log(\"moi\");\n    console.log(this.reprint);\n    console.log(toJS(this.printOutType));\n    const url = \"/plp-core-services/rest/massoperations/reprintorder\";\n    const body = {\n      \"printoutType\": this.printOutType,\n      \"originalDate\": this.reprint.originalDate,\n      \"productType\": this.reprint.productType\n    };\n    const settings = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json',\n        'x-csrf-token': token,\n        'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n        'plp-user': \"boadmin\",\n        'plp-end-user': \"boadmin\"\n      },\n      body: JSON.stringify(body)\n    };\n    return postToApi(url, settings).then(action(res => {\n      console.log(res);\n      return res;\n    })).catch(res => {\n      this.rootStore.errorStore.showError(res.message, res.title);\n      console.log(res);\n      return res;\n    });\n  } //function for making a annaouncement order api call\n\n\n  postNewAnnouncementOrder(token) {\n    const url = \"/plp-core-services/rest/massoperations/announcementorder\";\n    const body = {\n      \"agreementID\": this.agreementID,\n      \"allReceivers\": this.announcement,\n      \"attribute\": this.announcement,\n      \"groupID\": this.groupID,\n      \"printExecDate\": this.announcement.printExecDate,\n      \"receiver\": [this.announcement.orders.map(variable => {\n        return variable.receiver;\n      })]\n    };\n    const settings = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json',\n        'x-csrf-token': token,\n        'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n        'plp-user': \"boadmin\",\n        'plp-end-user': \"boadmin\"\n      },\n      body: JSON.stringify(body)\n    };\n    return postToApi(url, settings).then(action(res => {\n      console.log(res);\n      return res;\n    })).catch(res => {\n      this.rootStore.errorStore.showError(res.message, res.title);\n      return res;\n    });\n  } //function for making a forced calculation order api call\n\n\n  postNewForcedCalculation(token) {\n    const url = \"/plp-core-services/rest/massoperations/forcecalculationorder\";\n    const body = {\n      \"EarliestPossibleCalcDateUsed\": this.forcedCalculation.EarliestPossibleCalcDateUsed,\n      \"agreementID\": this.agreementID,\n      \"groupID\": this.groupID,\n      \"reason\": this.forcedCalculation.reason,\n      \"startDate\": this.forcedCalculation.startDate\n    };\n    const settings = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json',\n        'x-csrf-token': token,\n        'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n        'plp-user': \"boadmin\",\n        'plp-end-user': \"boadmin\"\n      },\n      body: JSON.stringify(body)\n    };\n    return postToApi(url, settings).then(action(res => {\n      console.log(res);\n      return res;\n    })).catch(res => {\n      this.rootStore.errorStore.showError(res.message, res.title);\n      return res;\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"LopetusIk\\xE4\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"aloitusIk\\xE4\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"public\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"checkSessionStore\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      if (sessionStorage.length !== 0) {\n        if (sessionStorage.massOperation) {\n          const item = sessionStorage.getItem(\"massOperation\");\n          this.massOperation = item;\n        }\n\n        if (sessionStorage.massOperationType) {\n          const item = sessionStorage.getItem(\"massOperationType\");\n          this.massOperationType = item;\n        }\n\n        if (sessionStorage.agreementID) {\n          const item = sessionStorage.getItem(\"agreementID\");\n          this.agreementID = item.split(/[,]/);\n        }\n\n        if (sessionStorage.groupID) {\n          const item = sessionStorage.getItem(\"groupID\");\n          this.groupID = item.split(/[,]/);\n        }\n\n        if (sessionStorage.status) {\n          const item = Number(sessionStorage.getItem(\"status\"));\n          this.status = item;\n        }\n\n        if (sessionStorage.defineAction) {\n          const item = sessionStorage.getItem(\"defineAction\");\n          const values = JSON.parse(item);\n          console.log(values);\n          this.startDate = values.startDate;\n          this.endDate = values.endDate;\n          this.printExecDate = values.printExecutionDate;\n        }\n\n        if (sessionStorage.announcement) {\n          const item = sessionStorage.getItem(\"announcement\");\n          console.log(JSON.parse(item));\n          this.announcement = JSON.parse(item);\n        }\n\n        if (sessionStorage.forcedCalculation) {\n          const item = sessionStorage.getItem(\"forcedCalculation\");\n          this.forcedCalculation = JSON.parse(item);\n        }\n      }\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"handleConfirmation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async res => {\n      this.confirmation = res;\n      this.confirmationModalIsOpen = false;\n      console.log(res);\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"handleConfirmationModal\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async message => {\n      this.confirmation = null;\n      this.confirmationModalIsOpen = !this.confirmationModalIsOpen;\n      this.confirmationMessage = message;\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"setStatus\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return status => {\n      this.status = status;\n      sessionStorage.setItem(\"status\", status.toString());\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"setDefineAction\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      const values = data;\n      this.startDate = values.startDate;\n      this.endDate = values.endDate;\n      this.printExecDate = data.printExecutionDate;\n      sessionStorage.setItem(\"defineAction\", JSON.stringify(data));\n    };\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"setMassOperation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (massOperation, type) => {\n      console.log(massOperation, type);\n      this.massOperation = massOperation;\n      this.massOperationType = type.printout;\n      this.printOutType = type.type;\n\n      if (typeof Storage !== \"undefined\") {\n        sessionStorage.setItem(\"massOperation\", massOperation);\n        sessionStorage.setItem('massOperationType', type.printout);\n        sessionStorage.setItem('printOutType', type.type);\n      }\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"setTargetPolicies\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (targetPolicies, variable) => {\n      console.log(targetPolicies);\n\n      if (variable === \"agreement\") {\n        this.agreementID = targetPolicies;\n\n        if (typeof Storage !== \"undefined\") {\n          sessionStorage.setItem(\"agreementID\", targetPolicies);\n        }\n      }\n\n      if (variable === \"group\") {\n        this.groupID = targetPolicies;\n\n        if (typeof Storage !== \"undefined\") {\n          sessionStorage.setItem(\"groupID\", targetPolicies);\n        }\n      }\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"cancel\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return evt => {\n      sessionStorage.clear();\n      this.status = 0;\n      this.massOperation = '';\n      this.massOperationType = '';\n      this.groupID = [];\n      this.agreementID = [];\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"newOrder\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      sessionStorage.removeItem(\"groupID\");\n      sessionStorage.removeItem(\"agreementID\");\n      sessionStorage.removeItem(\"announcement\");\n      this.groupID = [];\n      this.agreementID = [];\n      this.announcement = {};\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"setDefineAnnouncement\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      this.announcement = data;\n      sessionStorage.setItem(\"announcement\", JSON.stringify(data));\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"setDefineReprint\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      console.log(data);\n      this.reprint = data;\n      sessionStorage.setItem(\"reprint\", JSON.stringify(data));\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"setForcedCalculation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      console.log(data);\n      this.forcedCalculation = data;\n      sessionStorage.setItem(\"forcedCalculation\", JSON.stringify(data));\n    };\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"newPrintOutOrder\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      return fetchTokenFromApi(\"/plp-core-services/rest/csrfToken\").then(res => {\n        const token = res;\n\n        if (this.massOperationType === \"Announcement\") {\n          return this.postNewAnnouncementOrder(token);\n        } else {\n          return this.postNewPrintOutOrder(token);\n        }\n      });\n    };\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"newReprintOrder\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      return fetchTokenFromApi(\"/plp-core-services/rest/csrfToken\").then(res => {\n        const token = res;\n        return this.postNewReprintOrder(token);\n      });\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"newForcedCalculation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      return fetchTokenFromApi(\"/plp-core-services/rest/csrfToken\").then(res => {\n        const token = res;\n        return this.postNewForcedCalculation(token);\n      });\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"postNewPrintOutOrder\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"postNewPrintOutOrder\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"postNewReprintOrder\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"postNewReprintOrder\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"postNewAnnouncementOrder\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"postNewAnnouncementOrder\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"postNewForcedCalculation\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"postNewForcedCalculation\"), _class.prototype)), _class);\nexport { OperationStore as default };","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/stores/OperationStore.ts"],"names":["action","observable","toJS","OperationStore","constructor","rootStore","postNewPrintOutOrder","token","url","body","printOutType","printExecDate","agreementID","groupID","startDate","endDate","settings","method","headers","getCookie","ClientStore","CLIENT_COOKIE","JSON","stringify","postToApi","then","res","console","log","catch","errorStore","showError","message","title","postNewReprintOrder","reprint","originalDate","productType","postNewAnnouncementOrder","announcement","orders","map","variable","receiver","postNewForcedCalculation","forcedCalculation","EarliestPossibleCalcDateUsed","reason","sessionStorage","length","massOperation","item","getItem","massOperationType","split","status","Number","defineAction","values","parse","printExecutionDate","confirmation","confirmationModalIsOpen","confirmationMessage","setItem","toString","data","type","printout","Storage","targetPolicies","evt","clear","removeItem","fetchTokenFromApi"],"mappings":"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","sourcesContent":["import {action, observable} from 'mobx';\nimport {toJS} from \"mobx\"\n\nexport default class OperationStore {\n    @observable public LopetusIkä: any =false;\n    @observable public aloitusIkä: any ={};\n    @observable public \n\n\n\n    private rootStore: any;\n\n    constructor(rootStore: any) {\n        this.rootStore = rootStore;\n    }\n\n    //function for checking the sessionStore for data and updating the observable variables\n    @action\n    public checkSessionStore = () => {\n        if (sessionStorage.length !== 0) {\n            if (sessionStorage.massOperation) {\n                const item: any = sessionStorage.getItem(\"massOperation\")\n                this.massOperation = item\n            }\n            if (sessionStorage.massOperationType) {\n                const item: any = sessionStorage.getItem(\"massOperationType\")\n                this.massOperationType = item;\n            }\n            if (sessionStorage.agreementID) {\n                const item: any = sessionStorage.getItem(\"agreementID\");\n                this.agreementID = item.split(/[,]/);\n            }\n            if (sessionStorage.groupID) {\n                const item: any = sessionStorage.getItem(\"groupID\");\n                this.groupID = item.split(/[,]/);\n            }\n            if (sessionStorage.status) {\n                const item: any = Number(sessionStorage.getItem(\"status\"))\n                this.status = item;\n            }\n            if (sessionStorage.defineAction) {\n                const item: any = sessionStorage.getItem(\"defineAction\")\n                const values = JSON.parse(item)\n                console.log(values)\n                this.startDate = values.startDate;\n                this.endDate = values.endDate;\n                this.printExecDate = values.printExecutionDate;\n            }\n            if (sessionStorage.announcement) {\n                const item: any = sessionStorage.getItem(\"announcement\")\n                console.log(JSON.parse(item))\n                this.announcement = JSON.parse(item);\n            }\n            if (sessionStorage.forcedCalculation) {\n                const item: any = sessionStorage.getItem(\"forcedCalculation\")\n                this.forcedCalculation = JSON.parse(item)\n            }\n\n        }\n    }\n    //function for handling confirmation modals confirmation\n    @action\n    public handleConfirmation = async (res: any) => {\n        this.confirmation = res;\n        this.confirmationModalIsOpen = false;\n        console.log(res)\n    }\n    //function for opening conformation modal\n    @action\n    public handleConfirmationModal = async (message: any) => {\n        this.confirmation = null\n        this.confirmationModalIsOpen = !this.confirmationModalIsOpen\n        this.confirmationMessage = message;\n    }\n    //function for changing the progressbars status\n    @action\n    public setStatus = (status: any) => {\n        this.status = status\n        sessionStorage.setItem(\"status\", status.toString())\n    }\n    //function for updating the define action data in session storage and operationstore\n    @action public setDefineAction = (data: any) => {\n        const values = data;\n        this.startDate = values.startDate;\n        this.endDate = values.endDate;\n        this.printExecDate = data.printExecutionDate;\n        sessionStorage.setItem(\"defineAction\", JSON.stringify(data))\n    }\n    //function for updating the massoperation data in session storage and operationstore\n    @action public setMassOperation = (massOperation: any, type: any) => {\n        console.log(massOperation, type)\n        this.massOperation = massOperation\n        this.massOperationType = type.printout\n        this.printOutType = type.type\n        if (typeof (Storage) !== \"undefined\") {\n            sessionStorage.setItem(\"massOperation\", massOperation);\n            sessionStorage.setItem('massOperationType', type.printout);\n            sessionStorage.setItem('printOutType', type.type);\n        }\n\n    }\n    //function for updating the target policies data in session storage and operationstore\n    @action public setTargetPolicies = (targetPolicies: any, variable: string) => {\n        console.log(targetPolicies)\n        if (variable === \"agreement\") {\n            this.agreementID = targetPolicies;\n            if (typeof (Storage) !== \"undefined\") {\n                sessionStorage.setItem(\"agreementID\", targetPolicies);\n            }\n        }\n        if (variable === \"group\") {\n            this.groupID = targetPolicies;\n            if (typeof (Storage) !== \"undefined\") {\n                sessionStorage.setItem(\"groupID\", targetPolicies);\n            }\n        }\n\n    }\n    //function for clearing operationstore and sessionstorage\n    @action public cancel = (evt: any) => {\n        sessionStorage.clear();\n        this.status = 0;\n        this.massOperation = '';\n        this.massOperationType = '';\n        this.groupID = [];\n        this.agreementID = [];\n    }\n    //function for clearing all the data from operationstore and sessionstorage except for massOperation and massOperationType\n    @action public newOrder = () => {\n        sessionStorage.removeItem(\"groupID\");\n        sessionStorage.removeItem(\"agreementID\");\n        sessionStorage.removeItem(\"announcement\");\n        this.groupID = [];\n        this.agreementID = [];\n        this.announcement = {}\n\n    }\n    //function for updating printout announcement data in sessionstorage and operationstore\n    @action public setDefineAnnouncement = (data: any) => {\n        this.announcement = data;\n        sessionStorage.setItem(\"announcement\", JSON.stringify(data));\n    }\n    //function for updating reprint data in sessionstorage and operationstore\n    @action public setDefineReprint = (data: any) => {\n        console.log(data)\n        this.reprint = data;\n        sessionStorage.setItem(\"reprint\", JSON.stringify(data))\n    }\n    //function for updating forced calculation data in sessionstorage and operationstore\n    @action public setForcedCalculation = (data: any) => {\n        console.log(data)\n        this.forcedCalculation = data;\n        sessionStorage.setItem(\"forcedCalculation\", JSON.stringify(data))\n    }\n//function for getting the csrf token and calling the postNewPrintOutOrder function\n    @action newPrintOutOrder = (data: any) => {\n        return fetchTokenFromApi(\"/plp-core-services/rest/csrfToken\").then(res => {\n            const token = res\n            if (this.massOperationType === \"Announcement\") {\n                return this.postNewAnnouncementOrder(token)\n            } else {\n                return this.postNewPrintOutOrder(token)\n            }\n        })\n    }\n////function for getting the csrf token and calling the postNewReprintOrder function\n    @action newReprintOrder = () => {\n        return fetchTokenFromApi(\"/plp-core-services/rest/csrfToken\").then(res => {\n            const token = res\n            return this.postNewReprintOrder(token)\n        })\n    }\n//function for getting the csrf token and calling the postNewForcedCalculationOrder function\n    @action newForcedCalculation = () => {\n        return fetchTokenFromApi(\"/plp-core-services/rest/csrfToken\").then(res => {\n            const token = res;\n            return this.postNewForcedCalculation(token)\n        })\n    }\n//function for making a printout order api call\n    @action\n    private postNewPrintOutOrder(token: any) {\n        const url = \"/plp-core-services/rest/massoperations/printoutorder\"\n        const body = {\n            \"printoutType\": this.printOutType,\n            \"printExecDate\": this.printExecDate,\n            \"agreementID\": this.agreementID,\n            \"groupID\": this.groupID,\n            \"startDate\": this.startDate,\n            \"endDate\": this.endDate,\n\n        }\n        const settings = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n                'x-csrf-token': token,\n                'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n                'plp-user': \"boadmin\",\n                'plp-end-user': \"boadmin\",\n\n            },\n            body: JSON.stringify(body),\n        };\n        return postToApi(url, settings).then(action((res: any) => {\n            console.log(res)\n            return res\n        })).catch(res => {\n            this.rootStore.errorStore.showError(res.message, res.title)\n            return res\n        })\n    }\n//function for making a reprint order api call\n    @action\n    private postNewReprintOrder(token: any) {\n        console.log(\"moi\")\n        console.log(this.reprint)\n        console.log(toJS(this.printOutType))\n        const url = \"/plp-core-services/rest/massoperations/reprintorder\"\n        const body = {\n            \"printoutType\": this.printOutType,\n            \"originalDate\": this.reprint.originalDate,\n            \"productType\": this.reprint.productType,\n\n        }\n\n        const settings = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n                'x-csrf-token': token,\n                'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n                'plp-user': \"boadmin\",\n                'plp-end-user': \"boadmin\",\n\n            },\n            body: JSON.stringify(body),\n        };\n        return postToApi(url, settings).then(action((res: any) => {\n            console.log(res)\n            return res\n        })).catch(res => {\n            this.rootStore.errorStore.showError(res.message, res.title)\n            console.log(res)\n            return res\n        })\n    }\n//function for making a annaouncement order api call\n    @action\n    private postNewAnnouncementOrder(token: any) {\n        const url = \"/plp-core-services/rest/massoperations/announcementorder\"\n        const body = {\n            \"agreementID\": this.agreementID,\n            \"allReceivers\": this.announcement,\n            \"attribute\": this.announcement,\n            \"groupID\": this.groupID,\n            \"printExecDate\": this.announcement.printExecDate,\n            \"receiver\": [\n                this.announcement.orders.map((variable: any) => {\n                        return variable.receiver\n                    }\n                )\n            ],\n        }\n        const settings = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n                'x-csrf-token': token,\n                'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n                'plp-user': \"boadmin\",\n                'plp-end-user': \"boadmin\",\n\n            },\n            body: JSON.stringify(body),\n        };\n        return postToApi(url, settings).then(action((res: any) => {\n            console.log(res)\n            return res\n        })).catch(res => {\n            this.rootStore.errorStore.showError(res.message, res.title)\n            return res\n        })\n\n    }\n//function for making a forced calculation order api call\n    @action\n    private postNewForcedCalculation(token: any) {\n        const url = \"/plp-core-services/rest/massoperations/forcecalculationorder\"\n        const body = {\n            \"EarliestPossibleCalcDateUsed\": this.forcedCalculation.EarliestPossibleCalcDateUsed,\n            \"agreementID\": this.agreementID,\n            \"groupID\": this.groupID,\n            \"reason\": this.forcedCalculation.reason,\n            \"startDate\": this.forcedCalculation.startDate\n        }\n        const settings = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Accept': 'application/json',\n                'x-csrf-token': token,\n                'plp-user-id': getCookie(ClientStore.CLIENT_COOKIE),\n                'plp-user': \"boadmin\",\n                'plp-end-user': \"boadmin\",\n\n            },\n            body: JSON.stringify(body),\n        };\n        return postToApi(url, settings).then(action((res: any) => {\n            console.log(res)\n            return res\n        })).catch(res => {\n            this.rootStore.errorStore.showError(res.message, res.title)\n            return res\n        })\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}