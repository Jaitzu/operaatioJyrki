{"ast":null,"code":"import _initializerDefineProperty from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _temp;\n\nimport { action, observable } from 'mobx';\nlet OperationStore = (_class = (_temp = class OperationStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"lopetusIka\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"aloitusIka\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"turvaProsentti\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"saastot\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"elakkeet\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"elakeAika\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"aloitusSumma\", _descriptor7, this);\n\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"checkSessionStore\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"setData\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"vuodenEl\\xE4ke\", _descriptor10, this);\n\n    this.rootStore = rootStore;\n  } //function for checking the sessionStore for data and updating the observable variables\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"lopetusIka\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"aloitusIka\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"turvaProsentti\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"saastot\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"elakkeet\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"elakeAika\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"aloitusSumma\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"checkSessionStore\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {};\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"setData\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      this.aloitusSumma = data.saastot * this.turvaProsentti / 100;\n      this.aloitusIka = data.aloitusIka;\n      this.lopetusIka = data.lopetusIka;\n      this.turvaProsentti = data.turvaProsentti;\n      this.saastot = data.saastot;\n      this.elakeAika = data.lopetusIka - data.aloitusIka;\n      console.log(this.lopetusIka);\n      console.log(this.aloitusIka);\n      console.log(this.turvaProsentti);\n      console.log(this.saastot);\n      this.elakkeet = [{\n        ika: data.aloitusIka,\n        elake: data.saastot * this.turvaProsentti / 100\n      }];\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"vuodenEl\\xE4ke\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return index => {\n      console.log(index);\n      console.log(this.elakkeet);\n      const elake = Number(this.elakkeet[index - 1].ika) + 1;\n      console.log(elake);\n      console.log(elakeaika);\n      const summa = Number(this.elakkeet[index - 1].elake) - Number(this.elakkeet[index - 1].elake) / Number(this.elakeAika);\n      console.log(summa);\n      this.elakkeet.push({\n        ika: elake,\n        elake: summa\n      });\n    };\n  }\n})), _class);\nexport { OperationStore as default };","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/stores/OperationStore.ts"],"names":["action","observable","OperationStore","constructor","rootStore","data","aloitusSumma","saastot","turvaProsentti","aloitusIka","lopetusIka","elakeAika","console","log","elakkeet","ika","elake","index","Number","elakeaika","summa","push"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,QAAiC,MAAjC;IAEqBC,c,sBAAN,MAAMA,cAAN,CAAqB;AAahCC,EAAAA,WAAW,CAACC,SAAD,EAAiB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAFpBA,SAEoB;;AAAA;;AAAA;;AAAA;;AACxB,SAAKA,SAAL,GAAiBA,SAAjB;AACH,GAf+B,CAiBhC;;;AAjBgC,C,oFAC/BH,U;;;;;WAAmC,I;;8EACnCA,U;;;;;WAAmC,I;;kFACnCA,U;;;;;WAAsC,I;;2EACtCA,U;;;;;WAA8B,I;;4EAC9BA,U;;;;;WAA+B,E;;6EAC/BA,U;;;;;WAAgC,I;;gFAChCA,U;;;;;WAAmC,I;;qFAWnCD,M;;;;;WAC0B,MAAM,CAEhC,C;;2EACAA,M;;;;;WAAgBK,IAAD,IAAY;AACxB,WAAKC,YAAL,GAAoBD,IAAI,CAACE,OAAL,GAAa,KAAKC,cAAnB,GAAmC,GAAtD;AACA,WAAKC,UAAL,GAAgBJ,IAAI,CAACI,UAArB;AACA,WAAKC,UAAL,GAAgBL,IAAI,CAACK,UAArB;AACA,WAAKF,cAAL,GAAoBH,IAAI,CAACG,cAAzB;AACA,WAAKD,OAAL,GAAaF,IAAI,CAACE,OAAlB;AACA,WAAKI,SAAL,GAAeN,IAAI,CAACK,UAAL,GAAkBL,IAAI,CAACI,UAAtC;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,UAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,UAAjB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,cAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,OAAjB;AACA,WAAKO,QAAL,GAAc,CAAC;AAACC,QAAAA,GAAG,EAACV,IAAI,CAACI,UAAV;AAAsBO,QAAAA,KAAK,EAAEX,IAAI,CAACE,OAAL,GAAa,KAAKC,cAAnB,GAAmC;AAA/D,OAAD,CAAd;AACH,K;;mFACAR,M;;;;;WAAqBiB,KAAD,IAAa;AAC9BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB;AACA,YAAME,KAAK,GAACE,MAAM,CAAC,KAAKJ,QAAL,CAAcG,KAAK,GAAC,CAApB,EAAuBF,GAAxB,CAAN,GAAoC,CAAhD;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA,YAAMC,KAAK,GAAEF,MAAM,CAAC,KAAKJ,QAAL,CAAcG,KAAK,GAAC,CAApB,EAAuBD,KAAxB,CAAN,GAAsCE,MAAM,CAAC,KAAKJ,QAAL,CAAcG,KAAK,GAAC,CAApB,EAAuBD,KAAxB,CAAN,GAAqCE,MAAM,CAAC,KAAKP,SAAN,CAA9F;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACJ,WAAKN,QAAL,CAAcO,IAAd,CAAmB;AAACN,QAAAA,GAAG,EAACC,KAAL;AAAWA,QAAAA,KAAK,EAACI;AAAjB,OAAnB;AACC,K;;;SA7CgBlB,c","sourcesContent":["import {action, observable} from 'mobx';\n\nexport default class OperationStore {\n    @observable public lopetusIka: any =null;\n    @observable public aloitusIka: any =null;\n    @observable public turvaProsentti:any =null;\n    @observable public saastot:any=null;\n    @observable public elakkeet:any=[]\n    @observable public elakeAika:any=null;\n    @observable public aloitusSumma:any=null;\n\n\n\n    private rootStore: any;\n\n    constructor(rootStore: any) {\n        this.rootStore = rootStore;\n    }\n\n    //function for checking the sessionStore for data and updating the observable variables\n    @action\n    public checkSessionStore = () => {\n\n    }\n    @action setData=(data:any)=>{\n        this.aloitusSumma =(data.saastot*this.turvaProsentti)/100;\n        this.aloitusIka=data.aloitusIka;\n        this.lopetusIka=data.lopetusIka;\n        this.turvaProsentti=data.turvaProsentti;\n        this.saastot=data.saastot\n        this.elakeAika=data.lopetusIka - data.aloitusIka;\n\n        console.log(this.lopetusIka)\n        console.log(this.aloitusIka)\n        console.log(this.turvaProsentti)\n        console.log(this.saastot)\n        this.elakkeet=[{ika:data.aloitusIka, elake:(data.saastot*this.turvaProsentti)/100,}]\n    }\n    @action vuodenElÃ¤ke =(index:any)=>{\n        console.log(index)\n        console.log(this.elakkeet)\n        const elake=Number(this.elakkeet[index-1].ika) +1\n        console.log(elake)\n        console.log(elakeaika)\n        const summa= Number(this.elakkeet[index-1].elake)-(Number(this.elakkeet[index-1].elake)/Number(this.elakeAika))\n        console.log(summa)\n    this.elakkeet.push({ika:elake,elake:summa})\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}