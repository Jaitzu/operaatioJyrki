{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Used for MouseEvent.buttons (note the s on the end).\n\nvar MouseButtons = {\n  Left: 1,\n  Right: 2,\n  Center: 4\n}; // Used for e.button (note the lack of an s on the end).\n\nvar MouseButton = {\n  Left: 0,\n  Center: 1,\n  Right: 2\n};\n/**\n * Only touch events and mouse events where the left button is pressed should initiate a drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\n\nfunction eventShouldStartDrag(e) {\n  // For touch events, button will be undefined. If e.button is defined,\n  // then it should be MouseButton.Left.\n  return e.button === undefined || e.button === MouseButton.Left;\n}\n\nexports.eventShouldStartDrag = eventShouldStartDrag;\n/**\n * Only touch events and mouse events where the left mouse button is no longer held should end a drag.\n * It's possible the user mouse downs with the left mouse button, then mouse down and ups with the right mouse button.\n * We don't want releasing the right mouse button to end the drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\n\nfunction eventShouldEndDrag(e) {\n  // Touch events will have buttons be undefined, while mouse events will have e.buttons's left button\n  // bit field unset if the left mouse button has been released\n  return e.buttons === undefined || (e.buttons & MouseButtons.Left) === 0;\n}\n\nexports.eventShouldEndDrag = eventShouldEndDrag;\n\nfunction isTouchEvent(e) {\n  return !!e.targetTouches;\n}\n\nexports.isTouchEvent = isTouchEvent;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/node_modules/react-dnd-touch-backend-cjs/lib/utils/predicates.js"],"names":["Object","defineProperty","exports","value","MouseButtons","Left","Right","Center","MouseButton","eventShouldStartDrag","e","button","undefined","eventShouldEndDrag","buttons","isTouchEvent","targetTouches"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CACA;;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,CADS;AAEfC,EAAAA,KAAK,EAAE,CAFQ;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAnB,C,CAKA;;AACA,IAAIC,WAAW,GAAG;AACdH,EAAAA,IAAI,EAAE,CADQ;AAEdE,EAAAA,MAAM,EAAE,CAFM;AAGdD,EAAAA,KAAK,EAAE;AAHO,CAAlB;AAKA;;;;;AAIA,SAASG,oBAAT,CAA8BC,CAA9B,EAAiC;AAC7B;AACA;AACA,SAAOA,CAAC,CAACC,MAAF,KAAaC,SAAb,IAA0BF,CAAC,CAACC,MAAF,KAAaH,WAAW,CAACH,IAA1D;AACH;;AACDH,OAAO,CAACO,oBAAR,GAA+BA,oBAA/B;AACA;;;;;;;AAMA,SAASI,kBAAT,CAA4BH,CAA5B,EAA+B;AAC3B;AACA;AACA,SAAOA,CAAC,CAACI,OAAF,KAAcF,SAAd,IAA2B,CAACF,CAAC,CAACI,OAAF,GAAYV,YAAY,CAACC,IAA1B,MAAoC,CAAtE;AACH;;AACDH,OAAO,CAACW,kBAAR,GAA6BA,kBAA7B;;AACA,SAASE,YAAT,CAAsBL,CAAtB,EAAyB;AACrB,SAAO,CAAC,CAACA,CAAC,CAACM,aAAX;AACH;;AACDd,OAAO,CAACa,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Used for MouseEvent.buttons (note the s on the end).\nvar MouseButtons = {\n    Left: 1,\n    Right: 2,\n    Center: 4,\n};\n// Used for e.button (note the lack of an s on the end).\nvar MouseButton = {\n    Left: 0,\n    Center: 1,\n    Right: 2,\n};\n/**\n * Only touch events and mouse events where the left button is pressed should initiate a drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\nfunction eventShouldStartDrag(e) {\n    // For touch events, button will be undefined. If e.button is defined,\n    // then it should be MouseButton.Left.\n    return e.button === undefined || e.button === MouseButton.Left;\n}\nexports.eventShouldStartDrag = eventShouldStartDrag;\n/**\n * Only touch events and mouse events where the left mouse button is no longer held should end a drag.\n * It's possible the user mouse downs with the left mouse button, then mouse down and ups with the right mouse button.\n * We don't want releasing the right mouse button to end the drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\nfunction eventShouldEndDrag(e) {\n    // Touch events will have buttons be undefined, while mouse events will have e.buttons's left button\n    // bit field unset if the left mouse button has been released\n    return e.buttons === undefined || (e.buttons & MouseButtons.Left) === 0;\n}\nexports.eventShouldEndDrag = eventShouldEndDrag;\nfunction isTouchEvent(e) {\n    return !!e.targetTouches;\n}\nexports.isTouchEvent = isTouchEvent;\n"]},"metadata":{},"sourceType":"script"}