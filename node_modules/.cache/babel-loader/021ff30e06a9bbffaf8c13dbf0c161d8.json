{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"/home/janne/repot/OperaatioJyrki/src/components/ViewContainer/ViewContainer.tsx\";\n\nimport React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport './ViewContainer.scss';\nimport Loader from '../Loader';\nimport Inputs from \"../InputContainer\";\nimport YearlySafetyAmountList from \"../YearlySafetyAmountList\";\nlet ViewContainer = (_dec = inject('operationStore'), _dec(_class = observer(_class = class ViewContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  } //function for launching the loader component when the application is loading data from the server\n\n\n  componentDidMount() {\n    fetch(\"/localhost:3000\").then(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        className: \"view-container-container\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        lg: {\n          size: 8,\n          offset: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"view-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Inputs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(YearlySafetyAmountList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }\n\n}) || _class) || _class);\nexport default withRouter(ViewContainer);","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/components/ViewContainer/ViewContainer.tsx"],"names":["React","inject","observer","Loader","Inputs","YearlySafetyAmountList","ViewContainer","Component","constructor","props","state","loading","componentDidMount","fetch","then","setState","render","size","offset","withRouter"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;IAcMC,a,WAFLL,MAAM,CAAC,gBAAD,C,gBACNC,Q,UADD,MAEMI,aAFN,SAE4BN,KAAK,CAACO,SAFlC,CAE6E;AAC7EC,EAAAA,WAAW,CAACC,KAAD,EAA0B;AACrC,UAAMA,KAAN;AACI,SAAKC,KAAL,GAAY;AACZC,MAAAA,OAAO,EAAC;AADI,KAAZ;AAGH,GAN4E,CAO7E;;;AACIC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CAAyBC,IAAzB,CAA8B,MAAI;AAC9B,WAAKC,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAFD;AAGH;;AAGDK,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKN,KAAL,CAAWC,OAAf,EAAwB;AACpB,aAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,aACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,EAAE,EAAE;AAACM,UAAAA,IAAI,EAAE,EAAP;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SAA9C;AAAqE,QAAA,EAAE,EAAE;AAACD,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,MAAM,EAAC;AAAhB,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,EAEF,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,CADJ,CADJ;AAQH;AACJ;;AA5BwE,C;AAgC7E,eAAeC,UAAU,CAACb,aAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport './ViewContainer.scss';\nimport Loader fromÂ '../Loader'\nimport {IOperationStore} from \"../../stores/types\"\nimport Inputs from \"../InputContainer\"\nimport YearlySafetyAmountList from \"../YearlySafetyAmountList\"\n\n\ninterface loadingProps{\n    loading:boolean\n    operationStore?:IOperationStore\n}\n\ninterface ViewcontainerProps  {\n    operationStore?:IOperationStore\n}\n\n@inject('operationStore')\n@observer\nclass ViewContainer extends React.Component<ViewcontainerProps,loadingProps> {\nconstructor(props:ViewcontainerProps){\nsuper(props)\n    this.state ={\n    loading:true\n    }\n}\n//function for launching the loader component when the application is loading data from the server\n    componentDidMount() {\n        fetch(\"/localhost:3000\").then(()=>{\n            this.setState({loading: false})\n        })\n    }\n\n\n    render() {\n        if (this.state.loading) {\n            return <Loader/>\n        } else {\n            return (\n                <Col className=\"view-container-container\" md={{size: 10, offset: 1}} lg={{size:8, offset:2}} >\n                    <div className=\"view-container\">\n                  <Inputs/>\n                  <YearlySafetyAmountList/>\n                    </div>\n                </Col>\n            )\n        }\n    }\n}\n\n\nexport default withRouter(ViewContainer);"]},"metadata":{},"sourceType":"module"}