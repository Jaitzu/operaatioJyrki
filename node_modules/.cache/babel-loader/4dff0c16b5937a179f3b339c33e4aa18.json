{"ast":null,"code":"import _initializerDefineProperty from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/janne/repot/OperaatioJyrki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _class2, _temp;\n\nimport { observable } from 'mobx';\nlet ClientStore = (_class = (_temp = _class2 = class ClientStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"clientData\", _descriptor, this);\n\n    this.rootStore = void 0;\n    this.rootStore = rootStore;\n  }\n  /*\tpublic getClient(clientId: string) {\n  \t\tfetchFromApi(`/plp-core-services/rest/client/${clientId}/details`).then(action((clientResponse: IClientDetailsResult) => {\n  \t\t\t\tif (clientResponse.messages !== undefined && clientResponse.messages.length > 0) {\n  \t\t\t\t\tconst message = clientResponse.messages[0];\n  \t\t\t\t\tthis.rootStore.errorStore.showError(message.code, message.severity);\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t\t// TODO: Get correct client, currently just returns first\n  \t\t\t\tif (clientResponse.payload.clients[0]) {\n  \t\t\t\t\tconst firstClientData = clientResponse.payload.clients[0].basicInfo;\n  \t\t\t\t\tthis.clientData = {\n  \t\t\t\t\t\tclientId: firstClientData.identifier,\n  \t\t\t\t\t\tfirstName: firstClientData.firstName,\n  \t\t\t\t\t\tlastName: firstClientData.lastName\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}))\n  \t\t\t.catch((res) => {\n  \t\t\t\tthis.rootStore.errorStore.showError(res.message, '');\n  \t\t\t});\n  \t}*/\n\n\n}, _class2.CLIENT_COOKIE = 'CLIENT_ID', _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"clientData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      clientId: '',\n      firstName: '',\n      lastName: ''\n    };\n  }\n})), _class);\nexport { ClientStore as default };","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/stores/ClientStore.ts"],"names":["observable","ClientStore","constructor","rootStore","CLIENT_COOKIE","clientId","firstName","lastName"],"mappings":";;;;;;AAAA,SAAQA,UAAR,QAAyB,MAAzB;IAGqBC,W,gCAAN,MAAMA,WAAN,CAAkB;AAWhCC,EAAAA,WAAW,CAACC,SAAD,EAAiB;AAAA;;AAAA,SAFpBA,SAEoB;AAC3B,SAAKA,SAAL,GAAiBA,SAAjB;AACA;AAEF;;;;;;;;;;;;;;;;;;;;;;;AAfiC,C,UAClBC,a,GAAwB,W,oFAErCJ,U;;;;;WAAmD;AACnDK,MAAAA,QAAQ,EAAE,EADyC;AAEnDC,MAAAA,SAAS,EAAE,EAFwC;AAGnDC,MAAAA,QAAQ,EAAE;AAHyC,K;;;SAHhCN,W","sourcesContent":["import {observable} from 'mobx';\nimport {IClientDetailsData} from './types';\n\nexport default class ClientStore {\n\tpublic static CLIENT_COOKIE: string = 'CLIENT_ID';\n\n\t@observable public clientData: IClientDetailsData = {\n\t\tclientId: '',\n\t\tfirstName: '',\n\t\tlastName: ''\n\t};\n\n\tprivate rootStore: any;\n\n\tconstructor(rootStore: any) {\n\t\tthis.rootStore = rootStore;\n\t}\n\n/*\tpublic getClient(clientId: string) {\n\t\tfetchFromApi(`/plp-core-services/rest/client/${clientId}/details`).then(action((clientResponse: IClientDetailsResult) => {\n\t\t\t\tif (clientResponse.messages !== undefined && clientResponse.messages.length > 0) {\n\t\t\t\t\tconst message = clientResponse.messages[0];\n\t\t\t\t\tthis.rootStore.errorStore.showError(message.code, message.severity);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// TODO: Get correct client, currently just returns first\n\t\t\t\tif (clientResponse.payload.clients[0]) {\n\t\t\t\t\tconst firstClientData = clientResponse.payload.clients[0].basicInfo;\n\t\t\t\t\tthis.clientData = {\n\t\t\t\t\t\tclientId: firstClientData.identifier,\n\t\t\t\t\t\tfirstName: firstClientData.firstName,\n\t\t\t\t\t\tlastName: firstClientData.lastName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}))\n\t\t\t.catch((res) => {\n\t\t\t\tthis.rootStore.errorStore.showError(res.message, '');\n\t\t\t});\n\t}*/\n}"]},"metadata":{},"sourceType":"module"}