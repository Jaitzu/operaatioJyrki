{"ast":null,"code":"var _jsxFileName = \"/home/janne/repot/OperaatioJyrki/src/components/YearlySafetyAmountList/YearlyList.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./YearlyList.scss\";\nimport { Button, Input, Table } from \"reactstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst YearlyList = inject('operationStore')(observer(props => {\n  const buttonRef = useRef([]);\n  const [index, setIndex] = useState(null);\n  const [eläke, setPäivitäEläke] = useState(\"\");\n\n  const showNextColumn = evt => {\n    evt.preventDefault();\n    console.log(props.operationStore.elakkeet.length);\n    const index = props.operationStore.elakkeet.length;\n    props.operationStore.vuodenEläke(index);\n  };\n\n  useEffect(() => {\n    table();\n    buttonRef.current = buttonRef.current.slice(0, props.operationStore.elakkeet.length);\n  }, [props.operationStore.elakkeet]);\n\n  const submit = evt => {\n    evt.preventDefault();\n    props.operationStore.paivitaElake(eläke, index);\n  };\n\n  const päivitäEläke = (evt, index) => {\n    console.log(\"moi\");\n    console.log(evt.target.value);\n    setPäivitäEläke(evt.target.value);\n    setIndex(index);\n  };\n\n  const table = () => {\n    const variables = props.operationStore.elakkeet;\n\n    if (variables !== undefined || variables.lenght > 0) {\n      return variables;\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"announcement-receivers-table-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: \"announcement-receivers-table-view__table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"announcement-receivers-table-view__table-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"El\\xE4ke vuosi\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"El\\xE4kkeen m\\xE4\\xE4r\\xE4\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"submit\"))), React.createElement(\"tbody\", {\n    className: \"announcement-receivers-table-view__table-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, table() !== null && table().map((target, index) => React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, target.ika), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Input, {\n    ref: el => buttonRef[index] = el,\n    placeholder: target.elake,\n    id: \"receiverInput\" + index,\n    onChange: evt => {\n      päivitäEläke(evt, index);\n    },\n    className: \"announcement-receivers-table-view__table-body-input\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: evt => {\n      submit(evt);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"add\")))))), React.createElement(Button, {\n    id: \"addNewReceiverTableColumn\",\n    onClick: evt => showNextColumn(evt),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"add\"));\n}));\nexport default YearlyList;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/components/YearlySafetyAmountList/YearlyList.tsx"],"names":["React","useState","useEffect","useRef","Button","Input","Table","inject","observer","YearlyList","props","buttonRef","index","setIndex","eläke","setPäivitäEläke","showNextColumn","evt","preventDefault","console","log","operationStore","elakkeet","length","vuodenEläke","table","current","slice","submit","paivitaElake","päivitäEläke","target","value","variables","undefined","lenght","map","ika","el","elake"],"mappings":"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","sourcesContent":["import React, {useState, useEffect,useRef} from \"react\"\nimport \"./YearlyList.scss\"\nimport {\n    Button,\n    Input,\n    Table,\n} from \"reactstrap\";\nimport {inject, observer} from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nconst YearlyList = inject('operationStore')(observer((props:any) => {\n    const buttonRef = useRef([]);\n    const [index, setIndex] = useState(null);\n    const [eläke, setPäivitäEläke]=useState(\"\");\n\n    const showNextColumn = (evt:any) => {\n        evt.preventDefault();\n        console.log(props.operationStore.elakkeet.length)\n        const index= props.operationStore.elakkeet.length;\n        props.operationStore.vuodenEläke(index);\n    }\n    useEffect(()=>{\n        table()\n        buttonRef.current = buttonRef.current.slice(0, props.operationStore.elakkeet.length);\n\n    },[props.operationStore.elakkeet])\n\n\n    const submit=(evt:any)=>{\n        evt.preventDefault();\n        props.operationStore.paivitaElake(eläke,index)\n    }\n    const päivitäEläke =(evt:any,index:any)=>{\n        console.log(\"moi\")\n        console.log(evt.target.value)\n        setPäivitäEläke(evt.target.value)\n        setIndex(index)\n    }\n\n    const table =()=> {\n        const variables = props.operationStore.elakkeet;\n\n        if(variables!== undefined || variables.lenght > 0) {\n            return variables\n        }else{\n            return null\n        }\n    }\n\n\n    return (\n        <div className=\"announcement-receivers-table-view\">\n\n            <Table className=\"announcement-receivers-table-view__table\">\n                <thead className={\"announcement-receivers-table-view__table-header\"}>\n                <tr>\n                    <th>Eläke vuosi</th>\n                    <th>Eläkkeen määrä</th>\n                    <th>submit</th>\n                </tr>\n                </thead>\n                <tbody className={\"announcement-receivers-table-view__table-body\"}>\n                {(table()!== null)\n                    &&\n                    table().map((target: any, index: number) => (\n                    <tr key={index} >\n                        <td>{target.ika}</td>\n                        <td><Input ref={el=>buttonRef[index]=el} placeholder={target.elake}  id={\"receiverInput\"+index} onChange={(evt:any)=>{päivitäEläke(evt,index)}} className={\"announcement-receivers-table-view__table-body-input\"} type=\"number\"/></td>\n                        <td><Button onClick={(evt:any)=>{submit(evt)}}>add</Button></td>\n                    </tr>\n\n                ))}\n                </tbody>\n            </Table>\n            <Button id={\"addNewReceiverTableColumn\"} onClick={(evt:any) => showNextColumn(evt)}>add</Button>\n        </div>\n    )\n}))\n\n\nexport default YearlyList;"]},"metadata":{},"sourceType":"module"}