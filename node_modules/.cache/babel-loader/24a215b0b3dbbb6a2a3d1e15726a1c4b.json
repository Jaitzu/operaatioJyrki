{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DragDropManagerImpl_1 = __importDefault(require(\"./DragDropManagerImpl\"));\n\nfunction createDragDropManager(backendFactory, globalContext, backendOptions, debugMode) {\n  var manager = new DragDropManagerImpl_1.default(debugMode);\n  var backend = backendFactory(manager, globalContext, backendOptions);\n  manager.receiveBackend(backend);\n  return manager;\n}\n\nexports.createDragDropManager = createDragDropManager;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/node_modules/dnd-core-cjs/lib/factories.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","DragDropManagerImpl_1","require","createDragDropManager","backendFactory","globalContext","backendOptions","debugMode","manager","default","backend","receiveBackend"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,qBAAqB,GAAGP,eAAe,CAACQ,OAAO,CAAC,uBAAD,CAAR,CAA3C;;AACA,SAASC,qBAAT,CAA+BC,cAA/B,EAA+CC,aAA/C,EAA8DC,cAA9D,EAA8EC,SAA9E,EAAyF;AACrF,MAAIC,OAAO,GAAG,IAAIP,qBAAqB,CAACQ,OAA1B,CAAkCF,SAAlC,CAAd;AACA,MAAIG,OAAO,GAAGN,cAAc,CAACI,OAAD,EAAUH,aAAV,EAAyBC,cAAzB,CAA5B;AACAE,EAAAA,OAAO,CAACG,cAAR,CAAuBD,OAAvB;AACA,SAAOF,OAAP;AACH;;AACDT,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DragDropManagerImpl_1 = __importDefault(require(\"./DragDropManagerImpl\"));\nfunction createDragDropManager(backendFactory, globalContext, backendOptions, debugMode) {\n    var manager = new DragDropManagerImpl_1.default(debugMode);\n    var backend = backendFactory(manager, globalContext, backendOptions);\n    manager.receiveBackend(backend);\n    return manager;\n}\nexports.createDragDropManager = createDragDropManager;\n"]},"metadata":{},"sourceType":"script"}