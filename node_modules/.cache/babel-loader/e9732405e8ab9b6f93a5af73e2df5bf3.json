{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar shallowequal_1 = __importDefault(require(\"shallowequal\"));\n\nvar wrapConnectorHooks_1 = __importDefault(require(\"./wrapConnectorHooks\"));\n\nvar isRef_1 = require(\"../utils/isRef\");\n\nvar TargetConnector =\n/** @class */\nfunction () {\n  function TargetConnector(backend) {\n    var _this = this;\n\n    this.hooks = wrapConnectorHooks_1.default({\n      dropTarget: function (node, options) {\n        _this.clearDropTarget();\n\n        _this.dropTargetOptions = options;\n\n        if (isRef_1.isRef(node)) {\n          _this.dropTargetRef = node;\n        } else {\n          _this.dropTargetNode = node;\n        }\n\n        _this.reconnect();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dropTargetRef = null;\n    this.dropTargetOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDropTarget = null;\n    this.lastConnectedDropTargetOptions = null;\n    this.backend = backend;\n  }\n\n  Object.defineProperty(TargetConnector.prototype, \"connectTarget\", {\n    get: function () {\n      return this.dropTarget;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TargetConnector.prototype.reconnect = function () {\n    // if nothing has changed then don't resubscribe\n    var didChange = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();\n\n    if (didChange) {\n      this.disconnectDropTarget();\n    }\n\n    var dropTarget = this.dropTarget;\n\n    if (!this.handlerId) {\n      return;\n    }\n\n    if (!dropTarget) {\n      this.lastConnectedDropTarget = dropTarget;\n      return;\n    }\n\n    if (didChange) {\n      this.lastConnectedHandlerId = this.handlerId;\n      this.lastConnectedDropTarget = dropTarget;\n      this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n      this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n    }\n  };\n\n  TargetConnector.prototype.receiveHandlerId = function (newHandlerId) {\n    if (newHandlerId === this.handlerId) {\n      return;\n    }\n\n    this.handlerId = newHandlerId;\n    this.reconnect();\n  };\n\n  Object.defineProperty(TargetConnector.prototype, \"dropTargetOptions\", {\n    get: function () {\n      return this.dropTargetOptionsInternal;\n    },\n    set: function (options) {\n      this.dropTargetOptionsInternal = options;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TargetConnector.prototype.didHandlerIdChange = function () {\n    return this.lastConnectedHandlerId !== this.handlerId;\n  };\n\n  TargetConnector.prototype.didDropTargetChange = function () {\n    return this.lastConnectedDropTarget !== this.dropTarget;\n  };\n\n  TargetConnector.prototype.didOptionsChange = function () {\n    return !shallowequal_1.default(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n  };\n\n  TargetConnector.prototype.disconnectDropTarget = function () {\n    if (this.unsubscribeDropTarget) {\n      this.unsubscribeDropTarget();\n      this.unsubscribeDropTarget = undefined;\n    }\n  };\n\n  Object.defineProperty(TargetConnector.prototype, \"dropTarget\", {\n    get: function () {\n      return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TargetConnector.prototype.clearDropTarget = function () {\n    this.dropTargetRef = null;\n    this.dropTargetNode = null;\n  };\n\n  return TargetConnector;\n}();\n\nexports.TargetConnector = TargetConnector;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/node_modules/react-dnd-cjs/lib/common/TargetConnector.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","shallowequal_1","require","wrapConnectorHooks_1","isRef_1","TargetConnector","backend","_this","hooks","default","dropTarget","node","options","clearDropTarget","dropTargetOptions","isRef","dropTargetRef","dropTargetNode","reconnect","handlerId","dropTargetOptionsInternal","lastConnectedHandlerId","lastConnectedDropTarget","lastConnectedDropTargetOptions","prototype","get","enumerable","configurable","didChange","didHandlerIdChange","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","receiveHandlerId","newHandlerId","set","undefined","current"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shallowequal_1 = __importDefault(require(\"shallowequal\"));\nvar wrapConnectorHooks_1 = __importDefault(require(\"./wrapConnectorHooks\"));\nvar isRef_1 = require(\"../utils/isRef\");\nvar TargetConnector = /** @class */ (function () {\n    function TargetConnector(backend) {\n        var _this = this;\n        this.hooks = wrapConnectorHooks_1.default({\n            dropTarget: function (node, options) {\n                _this.clearDropTarget();\n                _this.dropTargetOptions = options;\n                if (isRef_1.isRef(node)) {\n                    _this.dropTargetRef = node;\n                }\n                else {\n                    _this.dropTargetNode = node;\n                }\n                _this.reconnect();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n        this.backend = backend;\n    }\n    Object.defineProperty(TargetConnector.prototype, \"connectTarget\", {\n        get: function () {\n            return this.dropTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.reconnect = function () {\n        // if nothing has changed then don't resubscribe\n        var didChange = this.didHandlerIdChange() ||\n            this.didDropTargetChange() ||\n            this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        var dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    };\n    TargetConnector.prototype.receiveHandlerId = function (newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    };\n    Object.defineProperty(TargetConnector.prototype, \"dropTargetOptions\", {\n        get: function () {\n            return this.dropTargetOptionsInternal;\n        },\n        set: function (options) {\n            this.dropTargetOptionsInternal = options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.didHandlerIdChange = function () {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    };\n    TargetConnector.prototype.didDropTargetChange = function () {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    };\n    TargetConnector.prototype.didOptionsChange = function () {\n        return !shallowequal_1.default(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    };\n    TargetConnector.prototype.disconnectDropTarget = function () {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    };\n    Object.defineProperty(TargetConnector.prototype, \"dropTarget\", {\n        get: function () {\n            return (this.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TargetConnector.prototype.clearDropTarget = function () {\n        this.dropTargetRef = null;\n        this.dropTargetNode = null;\n    };\n    return TargetConnector;\n}());\nexports.TargetConnector = TargetConnector;\n"]},"metadata":{},"sourceType":"script"}