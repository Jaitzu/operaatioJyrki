{"ast":null,"code":"var _jsxFileName = \"/home/janne/repot/OperaatioJyrki/src/components/YearlySafetyAmountList/YearlyList.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./YearlyList.scss\";\nimport { Button, Input, Table } from \"reactstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst YearlyList = inject('operationStore')(observer(props => {\n  const refs = useRef([]);\n  refs.current = [];\n  const [index, setIndex] = useState(null);\n  const [eläke, setPäivitäEläke] = useState([]);\n\n  const showNextColumn = evt => {\n    evt.preventDefault();\n    console.log(props.operationStore.elakkeet.length);\n    const index = props.operationStore.elakkeet.length;\n    props.operationStore.vuodenEläke(index);\n  };\n\n  useEffect(() => {\n    table();\n    setPäivitäEläke([]);\n    props.operationStore.elakkeet.map(target => {\n      setPäivitäEläke(target.elake);\n    });\n  }, [props.operationStore.elakkeet]);\n\n  const addToRefs = evt => {\n    if (evt && !refs.current.includes(evt)) {\n      refs.current.push(evt);\n    }\n  };\n\n  const submit = (evt, index) => {\n    evt.preventDefault();\n    props.operationStore.paivitaElake(eläke, index);\n    console.log(refs.current[index]);\n  };\n\n  const päivitäEläke = (evt, index) => {\n    console.log(\"moi\");\n    console.log(evt.target.value);\n    setPäivitäEläke(evt.target.value);\n    setIndex(index);\n  };\n\n  const table = () => {\n    const variables = props.operationStore.elakkeet;\n\n    if (variables !== undefined || variables.lenght > 0) {\n      return variables;\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"announcement-receivers-table-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: \"announcement-receivers-table-view__table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"announcement-receivers-table-view__table-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"El\\xE4ke vuosi\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"El\\xE4kkeen m\\xE4\\xE4r\\xE4\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"submit\"))), React.createElement(\"tbody\", {\n    className: \"announcement-receivers-table-view__table-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, table() !== null && table().map((target, index) => React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, target.ika), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Input, {\n    initialValue: target.elake,\n    value: eläke[index],\n    id: \"receiverInput\" + index,\n    onChange: evt => {\n      päivitäEläke(evt, index);\n    },\n    className: \"announcement-receivers-table-view__table-body-input\",\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: evt => {\n      submit(evt, index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"add\")))))), React.createElement(Button, {\n    id: \"addNewReceiverTableColumn\",\n    onClick: evt => showNextColumn(evt),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"add\"));\n}));\nexport default YearlyList;","map":{"version":3,"sources":["/home/janne/repot/OperaatioJyrki/src/components/YearlySafetyAmountList/YearlyList.tsx"],"names":["React","useState","useEffect","useRef","Button","Input","Table","inject","observer","YearlyList","props","refs","current","index","setIndex","eläke","setPäivitäEläke","showNextColumn","evt","preventDefault","console","log","operationStore","elakkeet","length","vuodenEläke","table","map","target","elake","addToRefs","includes","push","submit","paivitaElake","päivitäEläke","value","variables","undefined","lenght","ika"],"mappings":"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","sourcesContent":["import React, {useState, useEffect,useRef} from \"react\"\nimport \"./YearlyList.scss\"\nimport {\n    Button,\n    Input,\n    Table,\n} from \"reactstrap\";\nimport {inject, observer} from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {placeholder} from \"@babel/types\";\n\n\n\nconst YearlyList = inject('operationStore')(observer((props:any) => {\n    const refs= useRef([]);\n    refs.current=[];\n    const [index, setIndex] = useState(null);\n    const [eläke, setPäivitäEläke]=useState([]);\n\n\n    const showNextColumn = (evt:any) => {\n        evt.preventDefault();\n        console.log(props.operationStore.elakkeet.length)\n        const index= props.operationStore.elakkeet.length;\n        props.operationStore.vuodenEläke(index);\n    }\n    useEffect(()=>{\n        table()\n        setPäivitäEläke([])\n        props.operationStore.elakkeet.map((target:any)=>{\n            setPäivitäEläke(target.elake)\n        })\n    },[props.operationStore.elakkeet])\n\n    const addToRefs = (evt:never) => {\n        if (evt && !refs.current.includes(evt)) {\n            refs.current.push(evt);\n        }\n    };\n    const submit=(evt:any,index:any)=>{\n        evt.preventDefault();\n        props.operationStore.paivitaElake(eläke,index)\n        console.log(refs.current[index])\n\n    }\n    const päivitäEläke =(evt:any,index:any)=>{\n        console.log(\"moi\")\n        console.log(evt.target.value)\n        setPäivitäEläke(evt.target.value)\n        setIndex(index)\n    }\n\n    const table =()=> {\n        const variables = props.operationStore.elakkeet;\n\n        if(variables!== undefined || variables.lenght > 0) {\n            return variables\n        }else{\n            return null\n        }\n    }\n\n\n    return (\n        <div className=\"announcement-receivers-table-view\">\n\n            <Table className=\"announcement-receivers-table-view__table\">\n                <thead className={\"announcement-receivers-table-view__table-header\"}>\n                <tr>\n                    <th>Eläke vuosi</th>\n                    <th>Eläkkeen määrä</th>\n                    <th>submit</th>\n                </tr>\n                </thead>\n                <tbody className={\"announcement-receivers-table-view__table-body\"}>\n                {(table()!== null)\n                    &&\n                    table().map((target: any, index: number) => (\n                    <tr key={index} >\n                        <td>{target.ika}</td>\n                        <td><Input initialValue={target.elake}  value={(eläke[index])} id={\"receiverInput\"+index} onChange={(evt:any)=>{päivitäEläke(evt,index)}} className={\"announcement-receivers-table-view__table-body-input\"} type=\"number\"/></td>\n                        <td><Button onClick={(evt:any)=>{submit(evt,index)}}>add</Button></td>\n                    </tr>\n\n                ))}\n                </tbody>\n            </Table>\n            <Button id={\"addNewReceiverTableColumn\"} onClick={(evt:any) => showNextColumn(evt)}>add</Button>\n        </div>\n    )\n}))\n\n\nexport default YearlyList;"]},"metadata":{},"sourceType":"module"}